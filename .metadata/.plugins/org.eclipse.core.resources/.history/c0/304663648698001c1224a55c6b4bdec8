package com.te.carwalaproject.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.te.carwalaproject.dto.CarDetails;
import com.te.carwalaproject.model.CarDetailModelInsert;
import com.te.carwalaproject.service.CardetailsService;

@RestController
@RequestMapping("/car")
public class CarController {

	@Autowired
	private CardetailsService cardetailsService;

	@PostMapping("/new")
	public ResponseEntity<?> insertData01(@RequestBody CarDetails details) {
		System.out.println("In controller layer ==> " + details);
//		    CarDetailModelInsert insert=new CarDetailModelInsert();
//		    insert.setAdminUserName(details.getAdmin().getAdminUserName());
//		    details.setAdminUserName(insert.getAdminUserName());   
		try {
			boolean b = cardetailsService.insertData(details);
			System.out.println("hii controller" + b);
			return new ResponseEntity<String>("inserted successfully", HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("invalid data entry", HttpStatus.CHECKPOINT);
		}

	}

	@PostMapping("/newCar")
	public ResponseEntity<?> insertData02(@RequestBody CarDetails details) {
		System.out.println("In controller layer ==> " + details);
		try {
			boolean b = cardetailsService.insertData(details);
			System.out.println("hii controller" + b);
			return new ResponseEntity<String>("inserted successfully", HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("invalid data entry", HttpStatus.CHECKPOINT);
		}

	}

	@GetMapping("/data/{carId}")

	public ResponseEntity<?> getData(@PathVariable int carId) {
		try {
			CarDetails service = cardetailsService.getData(carId);

			CarDetailModelInsert carDetailModelInsert = new CarDetailModelInsert();
			carDetailModelInsert.setCarName(service.getCarName());
			carDetailModelInsert.setCompanyName(service.getCompanyName());
			carDetailModelInsert.setFuelType(service.getFuelType());
			carDetailModelInsert.setPowerSteering(service.getPowerSteering());
			carDetailModelInsert.setBreakSystem(service.getBreakSystem());
			carDetailModelInsert.setShowroom_Price(service.getShowroom_Price());
			carDetailModelInsert.setOnroadPrice(service.getOnroadPrice());
			carDetailModelInsert.setImageURL(service.getImageURL());
			carDetailModelInsert.setMileage(service.getMileage());
			carDetailModelInsert.setSeatingCapacity(service.getSeatingCapacity());
			carDetailModelInsert.setEngineCapacity(service.getEngineCapacity());
			carDetailModelInsert.setGearType(service.getGearType());
			carDetailModelInsert.setAdminUserName(service.getAdminUserName());
			carDetailModelInsert.setAdminId(service.getAdmin().getAdminId());

//			System.out.println("hiii controller"+service);
			return new ResponseEntity<CarDetailModelInsert>(carDetailModelInsert, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("id not match", HttpStatus.INTERNAL_SERVER_ERROR);
		}

	}

	@PutMapping("/edit")
	public ResponseEntity<?> updateData(@RequestBody CarDetails carDetails) {

		try {
			cardetailsService.updateData(carDetails);
			return new ResponseEntity<String>("updated successfully", HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("somthiing went wrong", HttpStatus.OK);
		}

	}

	@DeleteMapping("/remove/{carId}")
	public ResponseEntity<?> removeData(@PathVariable int carId) {

		try {
			cardetailsService.removeData(carId);
			return new ResponseEntity<String>("successfully deleted", HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("id not found", HttpStatus.BAD_REQUEST);
		}

	}

}
